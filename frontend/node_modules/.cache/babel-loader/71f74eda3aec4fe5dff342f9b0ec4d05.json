{"remainingRequest":"/var/www/frontend/node_modules/thread-loader/dist/cjs.js!/var/www/frontend/node_modules/babel-loader/lib/index.js!/var/www/frontend/src/store.js","dependencies":[{"path":"/var/www/frontend/src/store.js","mtime":1548968047293},{"path":"/var/www/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/var/www/frontend/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"/var/www/frontend/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    currentEmail: null,\n    user: JSON.parse(localStorage.getItem('user')),\n    notifications: []\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.user;\n    }\n  },\n  mutations: {\n    changeCurrentEmail: function changeCurrentEmail(state, email) {\n      state.currentEmail = email;\n    },\n    login: function login(state, user) {\n      state.user = user;\n    },\n    logout: function logout(state) {\n      state.user = null;\n    },\n    addNotification: function addNotification(state, notification) {\n      state.notifications.push(notification);\n    },\n    removeNotification: function removeNotification(state, index) {\n      delete state.notifications[index];\n    }\n  },\n  actions: {\n    login: function login(context, data) {\n      return new _Promise(function (resolve, reject) {\n        context.commit('logout');\n        axios.post('/oauth/auth', {\n          grant_type: 'password',\n          username: data.username,\n          password: data.password,\n          client_id: 'app',\n          client_secret: '',\n          access_type: 'offline'\n        }).then(function (response) {\n          var user = response.data;\n          localStorage.setItem('user', _JSON$stringify(user));\n          axios.defaults.headers.common['Authorization'] = 'Bearer ' + user.access_token;\n          context.commit('login', user);\n          resolve(user);\n        }).catch(function (error) {\n          context.commit('logout');\n          localStorage.removeItem('user');\n          reject(error);\n        });\n      });\n    },\n    logout: function logout(context) {\n      return new _Promise(function (resolve) {\n        context.commit('logout');\n        localStorage.removeItem('user');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    },\n    refresh: function refresh(context) {\n      return new _Promise(function (resolve, reject) {\n        if (context.state.user) {\n          delete axios.defaults.headers.common['Authorization'];\n          return axios.post('/oauth/auth', {\n            grant_type: 'refresh_token',\n            refresh_token: context.state.user.refresh_token,\n            client_id: 'app',\n            client_secret: ''\n          }).then(function (response) {\n            var user = response.data;\n            localStorage.setItem('user', _JSON$stringify(user));\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + user.access_token;\n            context.commit('login', user);\n            resolve(response);\n          }).catch(function (error) {\n            context.dispatch('logout');\n            reject(error);\n          });\n        }\n\n        resolve();\n      });\n    }\n  }\n});",{"version":3,"sources":["/var/www/frontend/src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","currentEmail","user","JSON","parse","localStorage","getItem","notifications","getters","isLoggedIn","mutations","changeCurrentEmail","email","login","logout","addNotification","notification","push","removeNotification","index","actions","context","data","resolve","reject","commit","post","grant_type","username","password","client_id","client_secret","access_type","then","response","setItem","defaults","headers","common","access_token","catch","error","removeItem","refresh","refresh_token","dispatch"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n        currentEmail: null,\n        user: JSON.parse(localStorage.getItem('user')),\n        notifications: []\n    },\n    getters: {\n        isLoggedIn(state) {\n            return !!state.user;\n        }\n    },\n    mutations: {\n        changeCurrentEmail(state, email) {\n            state.currentEmail = email;\n        },\n        login(state, user) {\n            state.user = user;\n        },\n        logout(state) {\n            state.user = null;\n        },\n        addNotification(state, notification) {\n            state.notifications.push(notification);\n        },\n        removeNotification(state, index) {\n            delete state.notifications[index];\n        }\n    },\n    actions: {\n        login(context, data) {\n            return new Promise((resolve, reject) => {\n                context.commit('logout');\n            axios.post('/oauth/auth', {\n                grant_type: 'password',\n                username: data.username,\n                password: data.password,\n                client_id: 'app',\n                client_secret: '',\n                access_type: 'offline',\n            })\n                .then(response => {\n                const user = response.data;\n            localStorage.setItem('user', JSON.stringify(user));\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + user.access_token;\n            context.commit('login', user);\n            resolve(user)\n        })\n        .catch(error => {\n                context.commit('logout');\n            localStorage.removeItem('user');\n            reject(error)\n        })\n        })\n        },\n        logout(context) {\n            return new Promise((resolve) => {\n                context.commit('logout');\n            localStorage.removeItem('user');\n            delete axios.defaults.headers.common['Authorization'];\n            resolve()\n        });\n        },\n        refresh(context) {\n            return new Promise((resolve, reject) => {\n                if (context.state.user) {\n                delete axios.defaults.headers.common['Authorization'];\n                return axios.post('/oauth/auth', {\n                    grant_type: 'refresh_token',\n                    refresh_token: context.state.user.refresh_token,\n                    client_id: 'app',\n                    client_secret: '',\n                })\n                    .then(response => {\n                    const user = response.data;\n                localStorage.setItem('user', JSON.stringify(user));\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + user.access_token;\n                context.commit('login', user);\n                resolve(response)\n            })\n            .catch(error => {\n                    context.dispatch('logout');\n                reject(error)\n            })\n            }\n            resolve()\n        });\n        }\n    }\n})"]}]}